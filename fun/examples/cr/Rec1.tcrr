module Main 12 -> eval(m.10);
data "Bool" = "False" -> 0, "True" -> 1;
data "List" = "Nil" -> 0, "Cons" -> 1;
\0,1 -> alloc 0();
\0,1 -> alloc 1();
\0,1 -> alloc 0();
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,3 -> alloc 1(d.3.0,d.1.0);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> eval(d.3.0); in
                                        let 1 -> eval(d.1.0); in
                                        ffi "primEqInt"(d.0.0,d.0.1);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> eval(d.3.0); in
                                        let 1 -> eval(d.1.0); in
                                        ffi "primAddInt"(d.0.0,d.0.1);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> eval(d.3.0); in
                                        let 1 -> eval(d.1.0); in
                                        ffi "primSubInt"(d.0.0,d.0.1);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,6 -> let 0 -> \0,4 -> let 0 -> \0,1 -> 0; in
                                                         eval(app (eval(app (eval(m.4))(d.4.0)))(d.0.0)); in
                                        let 1 -> eval(d.0.0); in
                                        case d.0.1.tag of
                                         -> let 2 -> \0,4 -> let 0 -> \0,4 -> let 0 -> \0,1 -> 1; in
                                                                              eval(app (eval(app (eval(m.6))(d.5.0)))(d.0.0)); in
                                                             eval(app (eval(app (eval(m.7))(d.0.0)))(d.2.0)); in
                                            eval(app (eval(app (eval(m.5))(d.1.0)))(d.0.2));
                                         -> 0;;
\0,1 -> 10;
\0,1 -> 10;
\0,3 -> eval(app (eval(app (eval(m.7))(m.8)))(m.9));
