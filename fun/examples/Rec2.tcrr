module Main 11 -> eval(m.9);
data "Bool" = "False" -> 0, "True" -> 1;
\0,1 -> alloc 0();
\0,1 -> alloc 1();
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> eval(d.3.0); in
                                        let 1 -> eval(d.1.0); in
                                        ffi "primEqInt"(d.0.0,d.0.1);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> eval(d.3.0); in
                                        let 1 -> eval(d.1.0); in
                                        ffi "primAddInt"(d.0.0,d.0.1);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> eval(d.3.0); in
                                        let 1 -> eval(d.1.0); in
                                        ffi "primSubInt"(d.0.0,d.0.1);
\0,1 -> \1,2 -> \0,1 -> \1,2 -> \0,4 -> let 0 -> \0,3 -> let 0 -> \0,4 -> let 0 -> \0,1 -> 1; in
                                                                          eval(app (eval(app (eval(m.4))(d.3.0)))(d.0.0)); in
                                                         eval(app (eval(d.4.0))(d.0.0)); in
                                        eval(app (eval(app (eval(m.3))(d.1.0)))(d.0.0));
\0,1 -> \1,2 -> \0,5 -> let 0 -> \0,4 -> let 0 -> \0,1 -> 0; in
                                         eval(app (eval(app (eval(m.2))(d.2.0)))(d.0.0)); in
                        let 1 -> eval(d.0.0); in
                        case d.0.1.tag of
                         -> eval(app (eval(app (eval(m.5))(m.6)))(d.1.0));
                         -> 0;;
\0,2 -> eval(app (eval(m.5))(m.6));
\0,1 -> 10;
\0,2 -> eval(app (eval(m.6))(m.8));
